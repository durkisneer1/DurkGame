<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classkn_1_1_error_logger" kind="class" language="C++" prot="public">
    <compoundname>kn::ErrorLogger</compoundname>
    <includes refid="_error_logger_8hpp" local="no">ErrorLogger.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkn_1_1_error_logger_1a5f7d66d8b27a0a655455c64ae0711d2e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string kn::ErrorLogger::m_filename</definition>
        <argsstring></argsstring>
        <name>m_filename</name>
        <qualifiedname>kn::ErrorLogger::m_filename</qualifiedname>
        <briefdescription>
<para>logfile name </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="94" column="17" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_error_logger_1abc8515d943e8becf326ae0115a62b336" prot="private" static="no" mutable="no">
        <type>std::fstream</type>
        <definition>std::fstream kn::ErrorLogger::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <qualifiedname>kn::ErrorLogger::m_file</qualifiedname>
        <briefdescription>
<para>internal file object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="95" column="18" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_error_logger_1a121348660efa43533db76a03851ebaca" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool kn::ErrorLogger::m_canWriteToFile</definition>
        <argsstring></argsstring>
        <name>m_canWriteToFile</name>
        <qualifiedname>kn::ErrorLogger::m_canWriteToFile</qualifiedname>
        <briefdescription>
<para>true if there has been no issue opening the file, false if there has been </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="96" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classkn_1_1_error_logger_1aff06aabf89ce766264775c58e2ef5c06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkn_1_1_error_logger" kindref="compound">ErrorLogger</ref> &amp;</type>
        <definition>static ErrorLogger &amp; kn::ErrorLogger::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>kn::ErrorLogger::getInstance</qualifiedname>
        <briefdescription>
<para>Gets the instance of the <ref refid="classkn_1_1_error_logger" kindref="compound">ErrorLogger</ref> singleton. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classkn_1_1_error_logger" kindref="compound">ErrorLogger</ref>&amp; a reference to the singleton </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="31" column="24" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_error_logger_1a9fc940f085f9c26dc77b0895b6e7328d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void kn::ErrorLogger::setConsoleOnly</definition>
        <argsstring>()</argsstring>
        <name>setConsoleOnly</name>
        <qualifiedname>kn::ErrorLogger::setConsoleOnly</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="38" column="17" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classkn_1_1_error_logger_1a358deef20ddadbfe2d2f7bae7fc63126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void kn::ErrorLogger::log</definition>
        <argsstring>(const std::string &amp;logString)</argsstring>
        <name>log</name>
        <qualifiedname>kn::ErrorLogger::log</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>logString</declname>
        </param>
        <briefdescription>
<para>logs the given string with a timestamp that looks like &quot;Mon Nov 20
23:28:22 2023&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logString</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="46" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="46" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classkn_1_1_error_logger_1a6a8ac7be4777c9615999be4a2f1a1460" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kn::ErrorLogger::ErrorLogger</definition>
        <argsstring>(const std::string &amp;filename=&quot;output.log&quot;)</argsstring>
        <name>ErrorLogger</name>
        <qualifiedname>kn::ErrorLogger::ErrorLogger</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
          <defval>&quot;output.log&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="73" column="14" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_error_logger_1ac071973dd70429a14feff5d35aa65b95" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kn::ErrorLogger::~ErrorLogger</definition>
        <argsstring>()</argsstring>
        <name>~ErrorLogger</name>
        <qualifiedname>kn::ErrorLogger::~ErrorLogger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="84" column="5" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_error_logger_1a752a413466b17bf29b3e27a815b851b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::ErrorLogger::ErrorLogger</definition>
        <argsstring>(const ErrorLogger &amp;other)=delete</argsstring>
        <name>ErrorLogger</name>
        <qualifiedname>kn::ErrorLogger::ErrorLogger</qualifiedname>
        <param>
          <type>const <ref refid="classkn_1_1_error_logger" kindref="compound">ErrorLogger</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="90" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_error_logger_1a641baf058f5586a129aec4d28d6a9ca5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::ErrorLogger::operator=</definition>
        <argsstring>(const ErrorLogger &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>kn::ErrorLogger::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classkn_1_1_error_logger" kindref="compound">ErrorLogger</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="92" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Singleton class for logging errors to file (or if file handling fails, console) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" line="23" column="1" bodyfile="D:/Code/c++/Kraken-Engine/include/ErrorLogger.hpp" bodystart="24" bodyend="98"/>
    <listofallmembers>
      <member refid="classkn_1_1_error_logger_1a6a8ac7be4777c9615999be4a2f1a1460" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>ErrorLogger</name></member>
      <member refid="classkn_1_1_error_logger_1a752a413466b17bf29b3e27a815b851b8" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>ErrorLogger</name></member>
      <member refid="classkn_1_1_error_logger_1aff06aabf89ce766264775c58e2ef5c06" prot="public" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>getInstance</name></member>
      <member refid="classkn_1_1_error_logger_1a358deef20ddadbfe2d2f7bae7fc63126" prot="public" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>log</name></member>
      <member refid="classkn_1_1_error_logger_1a121348660efa43533db76a03851ebaca" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>m_canWriteToFile</name></member>
      <member refid="classkn_1_1_error_logger_1abc8515d943e8becf326ae0115a62b336" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>m_file</name></member>
      <member refid="classkn_1_1_error_logger_1a5f7d66d8b27a0a655455c64ae0711d2e" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>m_filename</name></member>
      <member refid="classkn_1_1_error_logger_1a641baf058f5586a129aec4d28d6a9ca5" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>operator=</name></member>
      <member refid="classkn_1_1_error_logger_1a9fc940f085f9c26dc77b0895b6e7328d" prot="public" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>setConsoleOnly</name></member>
      <member refid="classkn_1_1_error_logger_1ac071973dd70429a14feff5d35aa65b95" prot="private" virt="non-virtual"><scope>kn::ErrorLogger</scope><name>~ErrorLogger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
