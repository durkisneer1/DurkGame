<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classkn_1_1_sound" kind="class" language="C++" prot="public" final="yes">
    <compoundname>kn::Sound</compoundname>
    <includes refid="_sound_8hpp" local="no">Sound.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkn_1_1_sound_1a03b8ed7a6b66bfd861b77735c9df97b8" prot="private" static="no" mutable="no">
        <type>Mix_Chunk *</type>
        <definition>Mix_Chunk* kn::Sound::m_sound</definition>
        <argsstring></argsstring>
        <name>m_sound</name>
        <qualifiedname>kn::Sound::m_sound</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="55" column="19" bodyfile="D:/Code/c++/Kraken-Engine/include/Sound.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sound_1a0f5dbf56994e6914eceb150887612937" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float kn::Sound::m_volume</definition>
        <argsstring></argsstring>
        <name>m_volume</name>
        <qualifiedname>kn::Sound::m_volume</qualifiedname>
        <initializer>= MIX_MAX_VOLUME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="56" column="15" bodyfile="D:/Code/c++/Kraken-Engine/include/Sound.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classkn_1_1_sound_1ab58e87bcd4fb6be02e98675621fb8a4b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::Sound::Sound</definition>
        <argsstring>(const std::string &amp;fileDir)</argsstring>
        <name>Sound</name>
        <qualifiedname>kn::Sound::Sound</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileDir</declname>
        </param>
        <briefdescription>
<para>Create a sound. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileDir</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory of the sound file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="19" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sound_1ab3d96a83099bbac05632882f07eb4c7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kn::Sound::~Sound</definition>
        <argsstring>()</argsstring>
        <name>~Sound</name>
        <qualifiedname>kn::Sound::~Sound</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="20" column="9" bodyfile="D:/Code/c++/Kraken-Engine/include/Sound.hpp" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sound_1a475db8853693191340bb86e2bb001c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::Sound::play</definition>
        <argsstring>(int loops=0, int playTime=-1, int fadeMs=0)</argsstring>
        <name>play</name>
        <qualifiedname>kn::Sound::play</qualifiedname>
        <param>
          <type>int</type>
          <declname>loops</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>playTime</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fadeMs</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Play the sound. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loops</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of times to loop the sound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>playTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to play the sound for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fadeMs</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to fade in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sound_1ac537563488214a87b177c3b3df6462a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::Sound::setVolume</definition>
        <argsstring>(float volume)</argsstring>
        <name>setVolume</name>
        <qualifiedname>kn::Sound::setVolume</qualifiedname>
        <param>
          <type>float</type>
          <declname>volume</declname>
        </param>
        <briefdescription>
<para>Set the volume of the sound. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="40" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sound_1af141a58501d0aa4585ff07b9bd4bf72b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float kn::Sound::getVolume</definition>
        <argsstring>() const</argsstring>
        <name>getVolume</name>
        <qualifiedname>kn::Sound::getVolume</qualifiedname>
        <briefdescription>
<para>Get the volume of the sound. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The volume of the sound. Between 0.0f and 1.0f. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="47" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sound_1a58cc163db5ac4d593bd76b44489cbf2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::Sound::unload</definition>
        <argsstring>()</argsstring>
        <name>unload</name>
        <qualifiedname>kn::Sound::unload</qualifiedname>
        <briefdescription>
<para>Free the sound from memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="52" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A sound object. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Code/c++/Kraken-Engine/include/Sound.hpp" line="11" column="5" bodyfile="D:/Code/c++/Kraken-Engine/include/Sound.hpp" bodystart="12" bodyend="57"/>
    <listofallmembers>
      <member refid="classkn_1_1_sound_1af141a58501d0aa4585ff07b9bd4bf72b" prot="public" virt="non-virtual"><scope>kn::Sound</scope><name>getVolume</name></member>
      <member refid="classkn_1_1_sound_1a03b8ed7a6b66bfd861b77735c9df97b8" prot="private" virt="non-virtual"><scope>kn::Sound</scope><name>m_sound</name></member>
      <member refid="classkn_1_1_sound_1a0f5dbf56994e6914eceb150887612937" prot="private" virt="non-virtual"><scope>kn::Sound</scope><name>m_volume</name></member>
      <member refid="classkn_1_1_sound_1a475db8853693191340bb86e2bb001c54" prot="public" virt="non-virtual"><scope>kn::Sound</scope><name>play</name></member>
      <member refid="classkn_1_1_sound_1ac537563488214a87b177c3b3df6462a1" prot="public" virt="non-virtual"><scope>kn::Sound</scope><name>setVolume</name></member>
      <member refid="classkn_1_1_sound_1ab58e87bcd4fb6be02e98675621fb8a4b" prot="public" virt="non-virtual"><scope>kn::Sound</scope><name>Sound</name></member>
      <member refid="classkn_1_1_sound_1a58cc163db5ac4d593bd76b44489cbf2c" prot="public" virt="non-virtual"><scope>kn::Sound</scope><name>unload</name></member>
      <member refid="classkn_1_1_sound_1ab3d96a83099bbac05632882f07eb4c7d" prot="public" virt="non-virtual"><scope>kn::Sound</scope><name>~Sound</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
