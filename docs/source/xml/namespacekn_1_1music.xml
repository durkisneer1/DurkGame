<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacekn_1_1music" kind="namespace" language="C++">
    <compoundname>kn::music</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacekn_1_1music_1a623bdf1bd061c9ceff8a39fa3e51096e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::load</definition>
        <argsstring>(const std::string &amp;fileDir)</argsstring>
        <name>load</name>
        <qualifiedname>kn::music::load</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileDir</declname>
        </param>
        <briefdescription>
<para>Loads a music file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileDir</parametername>
</parameternamelist>
<parameterdescription>
<para>The directory of the music file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="16" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="16" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1ac728fb8b0f8c9f420a018d1969f9bde6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::unload</definition>
        <argsstring>()</argsstring>
        <name>unload</name>
        <qualifiedname>kn::music::unload</qualifiedname>
        <briefdescription>
<para>Unloads the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="21" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="21" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1a957f2bba3def16755e1caa990d5392c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::play</definition>
        <argsstring>(int loops=0, int fadeMs=0)</argsstring>
        <name>play</name>
        <qualifiedname>kn::music::play</qualifiedname>
        <param>
          <type>int</type>
          <declname>loops</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>fadeMs</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Plays the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loops</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of times to loop the music. -1 loops forever. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fadeMs</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to fade in the music. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="29" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="29" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1a43e6135e6eebc297bdb7cf28f974b8e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::rewind</definition>
        <argsstring>()</argsstring>
        <name>rewind</name>
        <qualifiedname>kn::music::rewind</qualifiedname>
        <briefdescription>
<para>Rewinds the currently loaded music file back to the start. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="34" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="34" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1ac92cbbe33548a515e58e56929c661703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>kn::music::stop</qualifiedname>
        <briefdescription>
<para>Stops the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="39" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="39" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1aed484af73dd5c90280dd69643dec70a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <qualifiedname>kn::music::pause</qualifiedname>
        <briefdescription>
<para>Pauses the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="44" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="44" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1a561871bac8b78be821e886fdca43ce60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::resume</definition>
        <argsstring>()</argsstring>
        <name>resume</name>
        <qualifiedname>kn::music::resume</qualifiedname>
        <briefdescription>
<para>Resumes the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="49" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="49" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1a833289b5e4937594d6edc4d670d93b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::fadeOut</definition>
        <argsstring>(int fadeMs)</argsstring>
        <name>fadeOut</name>
        <qualifiedname>kn::music::fadeOut</qualifiedname>
        <param>
          <type>int</type>
          <declname>fadeMs</declname>
        </param>
        <briefdescription>
<para>Fades out the currently loaded music file to the a stop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fadeMs</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of milliseconds to fade out the music. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="56" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="56" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1ae4665e9e009a31690cb2a8dac5abd2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::music::setVolume</definition>
        <argsstring>(float volume)</argsstring>
        <name>setVolume</name>
        <qualifiedname>kn::music::setVolume</qualifiedname>
        <param>
          <type>float</type>
          <declname>volume</declname>
        </param>
        <briefdescription>
<para>Sets the volume of the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume to set the music to. 0.0f is silent, 1.0f is full volume. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="63" column="10" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="63" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1music_1a294ce07ee2327d528d4a5e1f93f167b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float kn::music::getVolume</definition>
        <argsstring>()</argsstring>
        <name>getVolume</name>
        <qualifiedname>kn::music::getVolume</qualifiedname>
        <briefdescription>
<para>Gets the volume of the currently loaded music file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The volume of the currently loaded music file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="70" column="11" declfile="D:/Code/c++/Kraken-Engine/include/Music.hpp" declline="70" declcolumn="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Code/c++/Kraken-Engine/include/Music.hpp" line="9" column="1"/>
  </compounddef>
</doxygen>
