<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classkn_1_1_entity" kind="class" language="C++" prot="public">
    <compoundname>kn::Entity</compoundname>
    <includes refid="_entity_8hpp" local="no">Entity.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classkn_1_1_entity_1a6f690f1e6e8a1d1887a017bee54aac46" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect kn::Entity::crop</definition>
        <argsstring></argsstring>
        <name>crop</name>
        <qualifiedname>kn::Entity::crop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="36" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_entity_1aca3c6b0924ad57ca9aa7816021b6e120" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect kn::Entity::rect</definition>
        <argsstring></argsstring>
        <name>rect</name>
        <qualifiedname>kn::Entity::rect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="37" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_entity_1a9c6a28eba8f8340c16b49c1b8ec64462" prot="public" static="no" mutable="no">
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">math::Vec2</ref></type>
        <definition>math::Vec2 kn::Entity::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <qualifiedname>kn::Entity::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="38" column="16" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_entity_1ad25589b0534f80990123989cecaca4ec" prot="public" static="no" mutable="no">
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">math::Vec2</ref></type>
        <definition>math::Vec2 kn::Entity::direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <qualifiedname>kn::Entity::direction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="39" column="16" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_entity_1a6644aaa615968606093840ae8dceeb85" prot="public" static="no" mutable="no">
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">math::Vec2</ref></type>
        <definition>math::Vec2 kn::Entity::velocity</definition>
        <argsstring></argsstring>
        <name>velocity</name>
        <qualifiedname>kn::Entity::velocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="40" column="16" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classkn_1_1_entity_1af6109be4fbfc369f7c1f1f38f38b84a1" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classkn_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture&gt; kn::Entity::texture</definition>
        <argsstring></argsstring>
        <name>texture</name>
        <qualifiedname>kn::Entity::texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="43" column="21" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_entity_1ad0c09ff24133b85f7120efc85827f08f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool kn::Entity::onGround</definition>
        <argsstring></argsstring>
        <name>onGround</name>
        <qualifiedname>kn::Entity::onGround</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="45" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_entity_1a976ef6a43e451094c526013c5c6d87d2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool kn::Entity::onCeiling</definition>
        <argsstring></argsstring>
        <name>onCeiling</name>
        <qualifiedname>kn::Entity::onCeiling</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="46" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classkn_1_1_entity_1a399022356d952d4ce651bc63c91d3f5d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::Entity::Entity</definition>
        <argsstring>(std::shared_ptr&lt; Texture &gt; texture)</argsstring>
        <name>Entity</name>
        <qualifiedname>kn::Entity::Entity</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classkn_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Create a entity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture of the entity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_entity_1af9efefed7c88b675f000739072cdeb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::Entity::~Entity</definition>
        <argsstring>()=default</argsstring>
        <name>~Entity</name>
        <qualifiedname>kn::Entity::~Entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_entity_1a88fa93e9e9cad9336d80e10b36199acf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classkn_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture &gt; kn::Entity::getTexture</definition>
        <argsstring>() const</argsstring>
        <name>getTexture</name>
        <qualifiedname>kn::Entity::getTexture</qualifiedname>
        <briefdescription>
<para>Get the entity&apos;s texture pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The entity&apos;s texture pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="34" column="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classkn_1_1_entity_1a03660630f087052ffe629c2a5ef81987" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void kn::Entity::moveAndCollide</definition>
        <argsstring>(double deltaTime, const std::vector&lt; std::shared_ptr&lt; T &gt; &gt; &amp;others)</argsstring>
        <name>moveAndCollide</name>
        <qualifiedname>kn::Entity::moveAndCollide</qualifiedname>
        <param>
          <type>double</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; T &gt; &gt; &amp;</type>
          <declname>others</declname>
        </param>
        <briefdescription>
<para>Move the entity while checking for collisions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time since the last frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>others</parametername>
</parameternamelist>
<parameterdescription>
<para>The other entities to check for collisions with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="55" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="55" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An entity to be inherited from. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>SDL_FRect</label>
      </node>
      <node id="1">
        <label>kn::Entity</label>
        <link refid="classkn_1_1_entity"/>
        <childnode refid="2" relation="usage">
          <edgelabel>crop</edgelabel>
          <edgelabel>rect</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>direction</edgelabel>
          <edgelabel>position</edgelabel>
          <edgelabel>velocity</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>kn::Rect</label>
        <link refid="structkn_1_1_rect"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>kn::math::Vec2</label>
        <link refid="classkn_1_1math_1_1_vec2"/>
      </node>
    </collaborationgraph>
    <location file="D:/Code/c++/Kraken-Engine/include/Entity.hpp" line="18" column="1" bodyfile="D:/Code/c++/Kraken-Engine/include/Entity.hpp" bodystart="19" bodyend="110"/>
    <listofallmembers>
      <member refid="classkn_1_1_entity_1a6f690f1e6e8a1d1887a017bee54aac46" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>crop</name></member>
      <member refid="classkn_1_1_entity_1ad25589b0534f80990123989cecaca4ec" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>direction</name></member>
      <member refid="classkn_1_1_entity_1a399022356d952d4ce651bc63c91d3f5d" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>Entity</name></member>
      <member refid="classkn_1_1_entity_1a88fa93e9e9cad9336d80e10b36199acf" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>getTexture</name></member>
      <member refid="classkn_1_1_entity_1a03660630f087052ffe629c2a5ef81987" prot="protected" virt="non-virtual"><scope>kn::Entity</scope><name>moveAndCollide</name></member>
      <member refid="classkn_1_1_entity_1a976ef6a43e451094c526013c5c6d87d2" prot="protected" virt="non-virtual"><scope>kn::Entity</scope><name>onCeiling</name></member>
      <member refid="classkn_1_1_entity_1ad0c09ff24133b85f7120efc85827f08f" prot="protected" virt="non-virtual"><scope>kn::Entity</scope><name>onGround</name></member>
      <member refid="classkn_1_1_entity_1a9c6a28eba8f8340c16b49c1b8ec64462" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>position</name></member>
      <member refid="classkn_1_1_entity_1aca3c6b0924ad57ca9aa7816021b6e120" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>rect</name></member>
      <member refid="classkn_1_1_entity_1af6109be4fbfc369f7c1f1f38f38b84a1" prot="protected" virt="non-virtual"><scope>kn::Entity</scope><name>texture</name></member>
      <member refid="classkn_1_1_entity_1a6644aaa615968606093840ae8dceeb85" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>velocity</name></member>
      <member refid="classkn_1_1_entity_1af9efefed7c88b675f000739072cdeb5a" prot="public" virt="non-virtual"><scope>kn::Entity</scope><name>~Entity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
