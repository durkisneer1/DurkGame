<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classkn_1_1_sprite" kind="class" language="C++" prot="public">
    <compoundname>kn::Sprite</compoundname>
    <includes refid="_sprite_8hpp" local="no">Sprite.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classkn_1_1_sprite_1a75da3726b10c575216676a3f99699469" prot="protected" static="no" mutable="no">
        <type><ref refid="classkn_1_1_render_window" kindref="compound">RenderWindow</ref> &amp;</type>
        <definition>RenderWindow&amp; kn::Sprite::window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <qualifiedname>kn::Sprite::window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="24" column="18" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1a89e937b93fe35424a524518c63209391" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classkn_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture&gt; kn::Sprite::texture</definition>
        <argsstring></argsstring>
        <name>texture</name>
        <qualifiedname>kn::Sprite::texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="25" column="21" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1ac961acd5a5f66f33b73fb4ec4e06185e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool kn::Sprite::onGround</definition>
        <argsstring></argsstring>
        <name>onGround</name>
        <qualifiedname>kn::Sprite::onGround</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="27" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1adaff62899f2e59fe8c46c2382dc76c2d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool kn::Sprite::onCeiling</definition>
        <argsstring></argsstring>
        <name>onCeiling</name>
        <qualifiedname>kn::Sprite::onCeiling</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="28" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classkn_1_1_sprite_1a02d25476be91c21037c5161d2dc156ef" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect kn::Sprite::crop</definition>
        <argsstring></argsstring>
        <name>crop</name>
        <qualifiedname>kn::Sprite::crop</qualifiedname>
        <initializer>= {0, 0, 0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="110" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1a8e5358951fe7c0d1d8db6a56b44def18" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1_rect" kindref="compound">Rect</ref></type>
        <definition>Rect kn::Sprite::rect</definition>
        <argsstring></argsstring>
        <name>rect</name>
        <qualifiedname>kn::Sprite::rect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="111" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1ad2f6b7b8d28bab5a14fd6eb4d30b5e97" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">math::Vec2</ref></type>
        <definition>math::Vec2 kn::Sprite::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <qualifiedname>kn::Sprite::position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="112" column="16" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1a6f0c996a6ad5c82c2f2b8a9d853fae26" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">math::Vec2</ref></type>
        <definition>math::Vec2 kn::Sprite::direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <qualifiedname>kn::Sprite::direction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="113" column="16" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkn_1_1_sprite_1a70473863a2213c741889470d5d45527c" prot="public" static="no" mutable="no">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">math::Vec2</ref></type>
        <definition>math::Vec2 kn::Sprite::velocity</definition>
        <argsstring></argsstring>
        <name>velocity</name>
        <qualifiedname>kn::Sprite::velocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="114" column="16" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classkn_1_1_sprite_1a11b878bf2824fe538de3faa77f95debd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void kn::Sprite::moveAndCollide</definition>
        <argsstring>(double deltaTime, const std::vector&lt; std::shared_ptr&lt; T &gt; &gt; &amp;others)</argsstring>
        <name>moveAndCollide</name>
        <qualifiedname>kn::Sprite::moveAndCollide</qualifiedname>
        <param>
          <type>double</type>
          <declname>deltaTime</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; T &gt; &gt; &amp;</type>
          <declname>others</declname>
        </param>
        <briefdescription>
<para>Move the sprite while checking for collisions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time since the last frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>others</parametername>
</parameternamelist>
<parameterdescription>
<para>The other sprites to check for collisions with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="37" column="10" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="37" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classkn_1_1_sprite_1a1c0f0e4ae241d2800271c73566b5c0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::Sprite::Sprite</definition>
        <argsstring>(RenderWindow &amp;window, std::shared_ptr&lt; Texture &gt; texture)</argsstring>
        <name>Sprite</name>
        <qualifiedname>kn::Sprite::Sprite</qualifiedname>
        <param>
          <type><ref refid="classkn_1_1_render_window" kindref="compound">RenderWindow</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classkn_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Create a sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The renderer context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture of the sprite. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="100" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sprite_1acf086746cdfbebb7389714971f828d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::Sprite::~Sprite</definition>
        <argsstring>()=default</argsstring>
        <name>~Sprite</name>
        <qualifiedname>kn::Sprite::~Sprite</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classkn_1_1_sprite_1a8661f70f31088ec760f6e9edf183f190" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classkn_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture &gt; kn::Sprite::getTexture</definition>
        <argsstring>() const</argsstring>
        <name>getTexture</name>
        <qualifiedname>kn::Sprite::getTexture</qualifiedname>
        <briefdescription>
<para>Get the sprite&apos;s texture pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The sprite&apos;s texture pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="108" column="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A container for a sprite. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This class is intended to be inherited from. </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>SDL_FRect</label>
      </node>
      <node id="3">
        <label>kn::Rect</label>
        <link refid="structkn_1_1_rect"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>kn::RenderWindow</label>
        <link refid="classkn_1_1_render_window"/>
      </node>
      <node id="1">
        <label>kn::Sprite</label>
        <link refid="classkn_1_1_sprite"/>
        <childnode refid="2" relation="usage">
          <edgelabel>window</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>crop</edgelabel>
          <edgelabel>rect</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>direction</edgelabel>
          <edgelabel>position</edgelabel>
          <edgelabel>velocity</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>kn::math::Vec2</label>
        <link refid="structkn_1_1math_1_1_vec2"/>
      </node>
    </collaborationgraph>
    <location file="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" line="21" column="1" bodyfile="D:/Code/c++/Kraken-Engine/include/Sprite.hpp" bodystart="22" bodyend="115"/>
    <listofallmembers>
      <member refid="classkn_1_1_sprite_1a02d25476be91c21037c5161d2dc156ef" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>crop</name></member>
      <member refid="classkn_1_1_sprite_1a6f0c996a6ad5c82c2f2b8a9d853fae26" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>direction</name></member>
      <member refid="classkn_1_1_sprite_1a8661f70f31088ec760f6e9edf183f190" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>getTexture</name></member>
      <member refid="classkn_1_1_sprite_1a11b878bf2824fe538de3faa77f95debd" prot="protected" virt="non-virtual"><scope>kn::Sprite</scope><name>moveAndCollide</name></member>
      <member refid="classkn_1_1_sprite_1adaff62899f2e59fe8c46c2382dc76c2d" prot="protected" virt="non-virtual"><scope>kn::Sprite</scope><name>onCeiling</name></member>
      <member refid="classkn_1_1_sprite_1ac961acd5a5f66f33b73fb4ec4e06185e" prot="protected" virt="non-virtual"><scope>kn::Sprite</scope><name>onGround</name></member>
      <member refid="classkn_1_1_sprite_1ad2f6b7b8d28bab5a14fd6eb4d30b5e97" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>position</name></member>
      <member refid="classkn_1_1_sprite_1a8e5358951fe7c0d1d8db6a56b44def18" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>rect</name></member>
      <member refid="classkn_1_1_sprite_1a1c0f0e4ae241d2800271c73566b5c0f6" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>Sprite</name></member>
      <member refid="classkn_1_1_sprite_1a89e937b93fe35424a524518c63209391" prot="protected" virt="non-virtual"><scope>kn::Sprite</scope><name>texture</name></member>
      <member refid="classkn_1_1_sprite_1a70473863a2213c741889470d5d45527c" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>velocity</name></member>
      <member refid="classkn_1_1_sprite_1a75da3726b10c575216676a3f99699469" prot="protected" virt="non-virtual"><scope>kn::Sprite</scope><name>window</name></member>
      <member refid="classkn_1_1_sprite_1acf086746cdfbebb7389714971f828d57" prot="public" virt="non-virtual"><scope>kn::Sprite</scope><name>~Sprite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
