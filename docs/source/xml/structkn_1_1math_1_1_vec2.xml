<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structkn_1_1math_1_1_vec2" kind="struct" language="C++" prot="public">
    <compoundname>kn::math::Vec2</compoundname>
    <includes refid="_math_8hpp" local="no">Math.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structkn_1_1math_1_1_vec2_1ae19685ae4e0b8df8eb3c79af58133f86" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float kn::math::Vec2::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>kn::math::Vec2::x</qualifiedname>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="13" column="11" bodyfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structkn_1_1math_1_1_vec2_1a88c56cf69b89eac88f960b2b707fd9bc" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float kn::math::Vec2::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>kn::math::Vec2::y</qualifiedname>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="14" column="11" bodyfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a005043f0542f6a672eb310d2a6b54236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::math::Vec2::Vec2</definition>
        <argsstring>()=default</argsstring>
        <name>Vec2</name>
        <qualifiedname>kn::math::Vec2::Vec2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="16" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1ae0e44d611efc084f001b036294da84f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::math::Vec2::Vec2</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>Vec2</name>
        <qualifiedname>kn::math::Vec2::Vec2</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="17" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a0db67ff4376145abda270f094247de15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::math::Vec2::Vec2</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>Vec2</name>
        <qualifiedname>kn::math::Vec2::Vec2</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="18" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1abbcec81aa0fe7f8a59cf99f483e3e121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::math::Vec2::Vec2</definition>
        <argsstring>(float x, int y)</argsstring>
        <name>Vec2</name>
        <qualifiedname>kn::math::Vec2::Vec2</qualifiedname>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1adad010f6748b0710ebf882605382dbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>kn::math::Vec2::Vec2</definition>
        <argsstring>(int x, float y)</argsstring>
        <name>Vec2</name>
        <qualifiedname>kn::math::Vec2::Vec2</qualifiedname>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="20" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a2ff26209f794ac15a972d2543c4836a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float kn::math::Vec2::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <qualifiedname>kn::math::Vec2::getLength</qualifiedname>
        <briefdescription>
<para>Get the length of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The length of the vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="33" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a0b419df55caf4a47b7fc7bb6ed6897bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kn::math::Vec2::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <qualifiedname>kn::math::Vec2::normalize</qualifiedname>
        <briefdescription>
<para>Normalize the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a5c355bb58ec1633bf40f3a7d8f809f8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float kn::math::Vec2::distanceTo</definition>
        <argsstring>(const Vec2 &amp;other) const</argsstring>
        <name>distanceTo</name>
        <qualifiedname>kn::math::Vec2::distanceTo</qualifiedname>
        <param>
          <type>const <ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Get the distance to another vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other vector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance to another vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="47" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1ab7fffe8ffa01c3efb1a899f4097f0433" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::Vec2::operator*</definition>
        <argsstring>(float scalar) const</argsstring>
        <name>operator*</name>
        <qualifiedname>kn::math::Vec2::operator*</qualifiedname>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="49" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a62f28b5a432d77a1e8a94b7f5cfdbb35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::Vec2::operator/</definition>
        <argsstring>(float scalar) const</argsstring>
        <name>operator/</name>
        <qualifiedname>kn::math::Vec2::operator/</qualifiedname>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="50" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a42f6f4a2ebd824928d7994fcb1f621f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::Vec2::operator+</definition>
        <argsstring>(const Vec2 &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>kn::math::Vec2::operator+</qualifiedname>
        <param>
          <type>const <ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a7d0a14b1cfc5c43a8033ea7550fedb3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::Vec2::operator-</definition>
        <argsstring>(const Vec2 &amp;other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>kn::math::Vec2::operator-</qualifiedname>
        <param>
          <type>const <ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a39333b3b1e6c7a53eb9c7591b3161238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::Vec2::operator+=</definition>
        <argsstring>(const Vec2 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>kn::math::Vec2::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a9ed5cf168206994dbfcea1fd10a8742a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool kn::math::Vec2::operator==</definition>
        <argsstring>(const Vec2 &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>kn::math::Vec2::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a42133229f86b9300809233b6d0a1b7cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool kn::math::Vec2::operator!=</definition>
        <argsstring>(const Vec2 &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>kn::math::Vec2::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="55" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structkn_1_1math_1_1_vec2_1a1d175a651f18b89df7ed11efdd80da8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>static Vec2 kn::math::Vec2::ZERO</definition>
        <argsstring>()</argsstring>
        <name>ZERO</name>
        <qualifiedname>kn::math::Vec2::ZERO</qualifiedname>
        <briefdescription>
<para>Get a vector with all components set to 0. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The zero vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="27" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A 2D vector. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="11" column="1" bodyfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" bodystart="12" bodyend="56"/>
    <listofallmembers>
      <member refid="structkn_1_1math_1_1_vec2_1a5c355bb58ec1633bf40f3a7d8f809f8a" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>distanceTo</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a2ff26209f794ac15a972d2543c4836a7" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>getLength</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a0b419df55caf4a47b7fc7bb6ed6897bf" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>normalize</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a42133229f86b9300809233b6d0a1b7cb" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator!=</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1ab7fffe8ffa01c3efb1a899f4097f0433" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator*</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a42f6f4a2ebd824928d7994fcb1f621f9" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator+</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a39333b3b1e6c7a53eb9c7591b3161238" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator+=</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a7d0a14b1cfc5c43a8033ea7550fedb3c" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator-</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a62f28b5a432d77a1e8a94b7f5cfdbb35" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator/</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a9ed5cf168206994dbfcea1fd10a8742a" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>operator==</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a005043f0542f6a672eb310d2a6b54236" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>Vec2</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1ae0e44d611efc084f001b036294da84f0" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>Vec2</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a0db67ff4376145abda270f094247de15" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>Vec2</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1abbcec81aa0fe7f8a59cf99f483e3e121" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>Vec2</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1adad010f6748b0710ebf882605382dbbc" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>Vec2</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1ae19685ae4e0b8df8eb3c79af58133f86" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>x</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a88c56cf69b89eac88f960b2b707fd9bc" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>y</name></member>
      <member refid="structkn_1_1math_1_1_vec2_1a1d175a651f18b89df7ed11efdd80da8b" prot="public" virt="non-virtual"><scope>kn::math::Vec2</scope><name>ZERO</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
