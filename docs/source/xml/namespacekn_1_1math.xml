<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacekn_1_1math" kind="namespace" language="C++">
    <compoundname>kn::math</compoundname>
    <innerclass refid="classkn_1_1math_1_1_vec2" prot="public">kn::math::Vec2</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacekn_1_1math_1a27b3a85fd27fbee0328fae0b780697fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::clampVec</definition>
        <argsstring>(const Vec2 &amp;vec, const Vec2 &amp;min, const Vec2 &amp;max)</argsstring>
        <name>clampVec</name>
        <qualifiedname>kn::math::clampVec</qualifiedname>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Clamp a vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to clamp. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The clamped vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="120" column="6" declfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1math_1a9a6ecf740568eb799b85a2f10d764de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::lerpVec</definition>
        <argsstring>(const Vec2 &amp;a, const Vec2 &amp;b, double t)</argsstring>
        <name>lerpVec</name>
        <qualifiedname>kn::math::lerpVec</qualifiedname>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Linearly interpolate a vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The first vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The second vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The interpolated vector. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="131" column="6" declfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1math_1a98048b6b75328ae4acbff11d314bfeae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::operator*</definition>
        <argsstring>(const T &amp;lhs, const Vec2 &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>kn::math::operator*</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Multiplies a vector by a constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the constant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the constant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector scaled by the constant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="141" column="18" bodyfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" bodystart="141" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespacekn_1_1math_1aa46e046256f2e9707eac97345b3e251b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref></type>
        <definition>Vec2 kn::math::operator*</definition>
        <argsstring>(const Vec2 &amp;lhs, const T &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>kn::math::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classkn_1_1math_1_1_vec2" kindref="compound">Vec2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Multiplies a vector by a constant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the constant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the constant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector scaled by the constant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Code/c++/Kraken-Engine/include/Math.hpp" line="164" column="18" bodyfile="D:/Code/c++/Kraken-Engine/include/Math.hpp" bodystart="164" bodyend="164"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Code/c++/Kraken-Engine/include/Cache.hpp" line="10" column="5"/>
  </compounddef>
</doxygen>
