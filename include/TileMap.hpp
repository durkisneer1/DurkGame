#pragma once

#include <memory>
#include <vector>

#include "tmxlite/Map.hpp"
#include "tmxlite/Layer.hpp"
#include "tmxlite/TileLayer.hpp"
#include "tmxlite/ObjectGroup.hpp"

#include "RenderWindow.hpp"
#include "Math.hpp"
#include "Tile.hpp"
#include "TextureCache.hpp"


namespace kn {
    /// @brief A class that represents a tile map.
    /// @details This class reads from TMX files generated by the Tiled map editor.
    /// @note This class is not ready for use yet.
    class TileMap final {
    public:
        /// @brief Constructs a tile map from a TMX file.
        /// @param tmxPath The path to the TMX file.
        TileMap(kn::RenderWindow& window, kn::TextureCache& textureCache, const std::string &tmxPath);
        ~TileMap() = default;

        void drawTiles(kn::RenderWindow &window, const kn::Rect &viewRect) const;
        const std::vector<kn::Tile>& getObjects() const { return objects; }
        const std::vector<kn::Tile>& getLayers() const { return layers; }

    private:
        kn::RenderWindow& window;
        kn::TextureCache& textureCache;

        tmx::Map map;
        std::vector<kn::Tile> objects;
        std::vector<kn::Tile> layers;
    };
}
