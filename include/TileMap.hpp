#pragma once

#include <memory>
#include <vector>

#include "tmxlite/Map.hpp"
#include "tmxlite/Layer.hpp"
#include "tmxlite/TileLayer.hpp"
#include "tmxlite/ObjectGroup.hpp"

#include "RenderWindow.hpp"
#include "Math.hpp"
#include "Tile.hpp"
#include "TextureCache.hpp"


namespace kn {

/// @brief A class that represents a tile map.
/// @details This class reads from TMX files generated by the Tiled map editor.
/// @note This class is not ready for use yet.
class TileMap final {
public:
    /// @brief Constructs a tile map from a TMX file.
    /// @param tmxPath The path to the TMX file.
    TileMap(RenderWindow& window, TextureCache& textureCache, const std::string &tmxPath);
    ~TileMap() = default;

    void drawTiles(RenderWindow &window, const Rect &viewRect) const;
    const std::vector<Tile>& getObjects() const { return objects; }
    const std::vector<Tile>& getLayers() const { return layers; }

private:
    RenderWindow& window;
    TextureCache& textureCache;

    tmx::Map map;
    std::vector<Tile> objects;
    std::vector<Tile> layers;
};

}
